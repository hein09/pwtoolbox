sudo: require
language: cpp
git:
    depth: 3
before_install:
    # Compilers:
    - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
    - sudo add-apt-repository -y ppa:beineri/opt-qt571-trusty
    - echo "deb http://pkg.mxe.cc/repos/apt/debian wheezy main" | sudo tee /etc/apt/sources.list.d/mxeapt.list
    - sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys D43A795B73B16ABE9643FE1AFD8FFF16DB45C6AB
    - sudo apt-get update -y -qq
    - sudo apt-get install -y -q --no-install-recommends mxe-x86-64-w64-mingw32.static-qtbase
    - export PATH=/usr/lib/mxe/usr/bin:$PATH
    - sudo apt-get install -y -qq --no-install-recommends g++-5
    - sudo apt-get install -y -qq --no-install-recommends qt57-meta-minimal
    - sudo apt-get install -y -qq --no-install-recommends wine
    # Emscripten:
    - git clone --depth 1 --branch incoming https://github.com/urho3d/emscripten-sdk.git ~/emscripten-sdk
    - ~/emscripten-sdk/emsdk activate --build=Release sdk-incoming-64bit binaryen-master-64bit
    - source ~/emscripten-sdk/emsdk_env.sh
    - for compiler in $EMSCRIPTEN/{emcc,em++}; do touch -d "2017-01-01 00:00:00 +0800" $compiler; done
    # Qt:
    - QT_ENV_SCRIPT=$(find /opt -name 'qt*-env.sh')
    - source $QT_ENV_SCRIPT
    # Header-only dependencies:
    - mkdir -p ~/headers/include
    - cd ~/headers
    - export INCLUDEPATH=$(pwd)/include
    - curl -fsS -o include/json.hpp -L https://github.com/nlohmann/json/releases/download/v2.1.1/json.hpp
    - wget https://github.com/pybind/pybind11/archive/v2.1.1.tar.gz && tar -xf v2.1.1.tar.gz
    - mv pybind11-2.1.1/include/pybind11 include
    # Target folders:
    - mkdir ~/gcc ~/clang ~/mingw ~/emscripten
install:
    # GCC
    - cd ~/gcc
    - qmake "INCLUDEPATH+=$INCLUDEPATH" CONFIG+=debug QMAKE_CXX=g++-5 QMAKE_LINK=g++-5 QMAKE_CC=gcc-5 -spec linux-g++ $TRAVIS_BUILD_DIR/vipster.pro
    - make
    # CLANG
    #- cd ~/clang
    #- qmake "INCLUDEPATH+=$INCLUDEPATH" -spec linux-clang $TRAVIS_BUILD_DIR/vipster.pro
    #- make
    # EMSCRIPTEN
    - cd ~/emscripten
    - qmake "INCLUDEPATH+=$INCLUDEPATH" -spec $TRAVIS_BUILD_DIR/emscriptenmkspec $TRAVIS_BUILD_DIR/vipster.pro
    - make
    # MINGW
    - cd ~/mingw
    - /usr/lib/mxe/usr/bin/x86_64-w64-mingw32.static-qmake-qt5 "INCLUDEPATH+=$INCLUDEPATH" $TRAVIS_BUILD_DIR/vipster.pro
    - make
script:
    # GCC
    - cd ~/gcc
    - LD_LIBRARY_PATH=libvipster tests/tst_libvipstertest
    # CLANG
    #- cd ~/clang
    #- LD_LIBRARY_PATH=libvipster tests/tst_libvipstertest
    # MINGW
    - cd ~/mingw
    - wine tests/release/tst_libvipstertest.exe
after_success:
    # coverage
    - cd ~/gcc
    - $TRAVIS_BUILD_DIR/get_code_cov.sh
    - bash <(curl -s https://codecov.io/bash)
    # prepare deploy
    - sed "s|vipster.wasm|js/vipster.wasm|" ~/emscripten/vipster/vipster.js > $TRAVIS_BUILD_DIR/gh-pages/js/vipster.js
    - cp ~/emscripten/vipster/vipster.wasm $TRAVIS_BUILD_DIR/gh-pages/js
deploy:
    - provider: pages
      skip_cleanup: true
      github_token: $GH_TOKEN
      local_dir: $TRAVIS_BUILD_DIR/gh-pages
      on:
          branch: testing
