# qmake configuration for building with emscripten
MAKEFILE_GENERATOR      = UNIX
QMAKE_PLATFORM          = wasm

EMCC_COMMON_LFLAGS      = --bind -s ERROR_ON_UNDEFINED_SYMBOLS=1 -s USE_WEBGL2=1 -s WASM=1 -s DISABLE_EXCEPTION_CATCHING=0

EMCC_COMMON_LFLAGS_DEBUG = $$EMCC_COMMON_FLAGS -s ASSERTIONS=2 -s DEMANGLE_SUPPORT=1 -s GL_DEBUG=1

QMAKE_COMPILER         += emscripten


QMAKE_CC                = emcc
QMAKE_CXX               = em++

# make qmake stop complaining
QMAKE_CXX.COMPILER_MACROS =

QMAKE_CFLAGS           += $$EMCC_COMMON_LFLAGS
QMAKE_CXXFLAGS         += $$EMCC_COMMON_LFLAGS

QMAKE_CFLAGS_DEBUG     += -g
QMAKE_CXXFLAGS_DEBUG   += -g

QMAKE_CFLAGS_RELEASE   += -O3
QMAKE_CXXFLAGS_RELEASE += -O3

MAKE_CFLAGS_OPTIMIZE   += -O3
MAKE_CFLAGS_OPTIMIZE_FULL += -Oz

QMAKE_LINK              = $$QMAKE_CXX
QMAKE_LINK_SHLIB        = $$QMAKE_CXX
QMAKE_LINK_C            = $$QMAKE_CC
QMAKE_LINK_C_SHLIB      = $$QMAKE_CC

#QMAKE_LFLAGS_SHLIB     += --separate-asm
QMAKE_LIBS_THREAD       = $$QMAKE_CFLAGS_THREAD

QMAKE_LFLAGS            += $$EMCC_COMMON_LFLAGS
QMAKE_LFLAGS_DEBUG      += $$EMCC_COMMON_LFLAGS_DEBUG
QMAKE_LFLAGS_RELEASE += -O3

QMAKE_PREFIX_SHLIB      = lib
QMAKE_EXTENSION_SHLIB   = so       # llvm bitcode, linked to js in post_link
QMAKE_PREFIX_STATICLIB  = lib
QMAKE_EXTENSION_STATICLIB = a      # llvm bitcode

QMAKE_AR                = emar cqs
QMAKE_CLEAN            += *.js *.wasm

QMAKE_CXXFLAGS_CXX11    = -std=c++11
QMAKE_CXXFLAGS_CXX14    = -std=c++1y
QMAKE_CXXFLAGS_CXX1Z    = -std=c++1z
QMAKE_CXXFLAGS_GNUCXX11 = -std=gnu++11
QMAKE_CXXFLAGS_GNUCXX14 = -std=gnu++1y
QMAKE_CXXFLAGS_GNUCXX1Z = -std=gnu++1z

#QTPLUGIN.platforms = html5
load(qt_config)
